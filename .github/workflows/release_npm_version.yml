# ******************************************************************
# Merge "releases/**" PR to kick off the release to NPM registry.
# ******************************************************************

name: Auto publish to npm registry once release PR is merged

on:
  pull_request_target:
    types:
      - closed
    branches:
      - main

permissions:
  contents: write
  issues: write

jobs:
  createRelease:
    if: github.event.pull_request.merged && startsWith(github.head_ref, 'releases/')
    runs-on: ubuntu-latest
    steps:
      - name: Main branch checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - run: npm ci

      - name: Publish to npm
        run: npm publish --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}

      - name: Retrieve package version
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "PACKAGE_VERSION=v${PACKAGE_VERSION}" >> $GITHUB_ENV

      - name: Create release
        run: |
          gh release create ${{ env.PACKAGE_VERSION }} --generate-notes --latest --title "${{ env.PACKAGE_VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update new commit to have "Latest" Tag
        run: |
          git config --global user.email developer@neuro-id.com
          git config --global user.name neuroid-developer
          set +e
          git push origin :latest
          git tag -d latest
          git tag latest
          git push origin latest
          set -e
  triggerRNSandboxProd:
    name: Trigger React Native Prod Sandbox release
    runs-on: ubuntu-latest
    needs: createRelease
    steps:
      - name: Trigger ReactNative Sandbox Android Deployment
        run: |
          curl \
             -X POST \
             -H "Accept: application/vnd.github.v3+json" \
             -H "Authorization: token ${{ secrets.GPR_API_KEY }}" \
             https://api.github.com/repos/Neuro-ID/neuroid-reactnative-sdk-sandbox/dispatches \
             -d '{"event_type":"publish-prod-android","client_payload":{"version":"${{env.PACKAGE_VERSION}}", "message": "${{ github.event.commit.message }}"}}'

      - name: Trigger ReactNative Sandbox iOS Deployment
        run: |
          curl \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GPR_API_KEY }}" \
            https://api.github.com/repos/Neuro-ID/neuroid-reactnative-sdk-sandbox/dispatches \
            -d '{"event_type":"on-demand-testflight","client_payload":{"version":"${{env.PACKAGE_VERSION}}", "message": "${{ github.event.commit.message }}"}}'

      - name: Send Slack Notification on Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: ${{ secrets.MOBILE_SLACK_NOTIFICATIONS_CHANNEL }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: 'Failed to trigger React Native Sandbox release (Prod)'
          SLACK_TITLE: Failed to trigger React Native Sandbox release (Prod)
          SLACK_USERNAME: rtBot
          SLACK_WEBHOOK: ${{ secrets.MOBILE_SLACK_WEBHOOK }}

  resetAndroidVersion:
    name: default to master snapshot
    runs-on: ubuntu-latest
    needs: triggerRNSandboxProd
    steps:
      - name: Create PR to reset android version to master snapshot
        run: |
          sed -i "s/:react-android-sdk:[0-9a-zA-Z.-]*/:react-android-sdk:master-SNAPSHOT/g" android/build.gradle
          sed -i "s/:react-android-sdk-debug:[0-9a-zA-Z.-]*/:react-android-sdk-debug:master-SNAPSHOT/g" android/build.gradle
          git config --global user.email developer@neuro-id.com
          git config --global user.name neuroid-developer   
          git checkout -b 'post-release-reset'
          git status
          set +e
          git add android/build.gradle
          git commit -m "Reset android version to master-SNAPSHOT"
          git push --set-upstream origin 'post-release-reset'
          set -e
      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const title = "Post-release/Reset android version to master-SNAPSHOT";
            const body = "Reset android version to master-SNAPSHOT";
            const headBranch = 'post-release-reset';
            const baseBranch = 'main';

            const createPullRequest = async () => {
              const response = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                head: headBranch,
                base: baseBranch
              });
              console.log(`Pull request ${response.data.number} created`);
            };

            createPullRequest();
