name: Publish to npm with updated package version

on:
  workflow_dispatch:
    inputs:
      major-update:
        description: Set `true` if there are breaking changes affecting sdk's across platforms i.e. react-native, android, ios etc.
        required: false
        type: boolean
        default: false
      minor-update:
        description: Set `true` if there are multiple minor changes affecting sdk's across platforms i.e. react-native, android, ios etc.
        required: false
        type: boolean
        default: false
      patch-update:
        description: Set `true` if the change affects only the react-native platform.
        required: false
        type: boolean
        default: true
jobs:
  update_version:
    name: Update package version
    runs-on: ubuntu-latest

    steps:
      - name: Main branch checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Determine update type
        run: |
          if [ ${{ inputs.major-update }} == "true" ]; then 
            echo "RELEASE_TYPE=major" >> $GITHUB_ENV
          elif [ ${{ inputs.minor-update }} == "true" ]; then 
            echo "RELEASE_TYPE=minor" >> $GITHUB_ENV
          else 
            echo "RELEASE_TYPE=patch" >> $GITHUB_ENV
          fi

      - name: Update version
        run: |
          git config --global user.email developer@neuro-id.com
          git config --global user.name neuroid-developer
          npm version ${{ env.RELEASE_TYPE }}
          git add ./package.json
          git commit -m "Bumping release package version"
          git push origin
          
  create_tag:
    name: Create tag
    runs-on: ubuntu-latest
    needs: [update_version]
    steps:
      - name: Read package version
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_ENV

      - name: Update tag
        run: |
          git tag -a ${{ env.PACKAGE_VERSION }} -m "Release version ${{ env.PACKAGE_VERSION }}"
          git push origin ${{ env.PACKAGE_VERSION }}

  publish_npm_package:
    name: Publish npm package
    runs-on: ubuntu-latest
    needs: [create_tag]
    steps:
      - name: Publish to npm
        run: npm publish --tag latest --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
