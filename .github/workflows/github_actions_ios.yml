name: Github Actions for iOS NeuroID SDK and ReactNative Sandbox

on:
  repository_dispatch:
        types: [on-demand-testflight]
env:
 VERSION: ${{ github.event.client_payload.version }}
 MESSAGE: ${{ github.event.client_payload.message }}
jobs:
  updating_files:
    runs-on: macos-latest
    steps:
    
      - name: Main branch Checkout
        uses: actions/checkout@v3
        with:
         ref: ${{ github.head_ref }}
         
      - name: iOS SDK repo clone
        uses: actions/checkout@v3
        with:
         repository: Neuro-ID/neuroid-ios-sdk
         path: './neuroid-ios-sdk'
        
      - name: Set up ruby env
        uses: ruby/setup-ruby@v1
        with:
         ruby-version: 2.7.2   
        
      - name: Updating pods files
        run: |
          git config --global user.email jose.perez@neuro-id.com
          git config --global user.name joseperezNID
          rsync -a '/Users/runner/work/neuroid-reactnative-sdk/neuroid-reactnative-sdk/neuroid-ios-sdk/NeuroID' '/Users/runner/work/neuroid-reactnative-sdk/neuroid-reactnative-sdk/ios'
          set +e
          git add ./ios/NeuroID/*
          git commit -m "${{ env.MESSAGE }}"
          git push
          set -e

  Testflight:
    runs-on: macos-latest
    steps:
    
      - name: Main branch Checkout
        uses: actions/checkout@v3
        with:
         ref: ${{ github.head_ref }}
         
      - name: iOS SDK repo clone
        uses: actions/checkout@v3
        with:
         repository: 'Neuro-ID/neuroid-ios-sdk-sandbox'
         path: './neuroid-ios-sdk'
        
      - name: Set up ruby env
        uses: ruby/setup-ruby@v1
        with:
         ruby-version: 2.7.2   
     
      - name: Bundle Install
        working-directory: example/ios/
        run: bundle install
      
      - name: Update fastlane env
        working-directory: example/ios/
        run: bundle update fastlane
      
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14
          
      - name: Install node dependencies
        working-directory: example/
        run: npm install -g expo-cli
      
      - name: Install dependencies
        working-directory: example/
        run: yarn install
      
      - uses: actions/cache@v3
        with:
         path: ./example/ios/Pods
         key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
         restore-keys: |
          ${{ runner.os }}-pods-
      
      - name: CocoaPod Install
        working-directory: example/ios/
        run: pod install
        
      - name: Upload iOS app to Testflight
        working-directory: example/ios/ 
        run: bundle exec fastlane testflight_beta
        env:
         APP_STORE_API_KEY: ${{ secrets.APP_STORE_API_KEY }}
         KEYCHAIN_PASSWORD: ${{ secrets.DIST_CERT_BASE64 }} 
